@model stocks.Models.Display.Data



<header style="font-family:Sabon LT Std;text-align:center;font-size:30px;font-weight:bold;
    background-color:#c6a073;color: #FFFFFF;padding:15px">
    Stock Visualization Application
</header>



<div style="background-color: #7399C6;padding:10px; color: #FFFFFF;font-family:Sabon LT Std">


    @using (Html.BeginForm("Ticker", "Display", null))

    {


        @Html.ValidationSummary(true)
        <fieldset>

            <span>Ticker</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Ticker)
                @Html.ValidationMessageFor(model => model.Ticker)
            </div>
            <br />

            <span>Start</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.Start)
                @Html.ValidationMessageFor(model => model.Start)
            </div>
            <br />

            <span>End</span>
            <div class="editor-field">
                @Html.EditorFor(model => model.End)
                @Html.ValidationMessageFor(model => model.End)
            </div>
            <br />


        </fieldset>
        <br />
        <p>
            <input type="submit" value="SUBMIT" style="background-color:#c6a073;color: #FFFFFF;border-color:black" />
        </p>
    }



    <p>//TODO: Hook up the data to the chart</p>


    <br /><br />
    @Html.DisplayFor(model => model.Name)
    <br /><br />
    @Html.DisplayFor(model => model.Industry)
    <br /><br />
    @Html.DisplayFor(model => model.Strr)

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.js"></script>

    <canvas id="myChart" width="200" height="100"></canvas>
    <script>

          var myArray = [];

    @foreach (var d in Model.Dates)
    {
        @:myArray.push("@d");
    }

    var myArray2 = [];

    @foreach (var d in Model.Prices)
    {
        @:myArray2.push("@d");
    }



        var ctx = document.getElementById("myChart").getContext('2d');
        Chart.defaults.global.elements.line.fill = false;

        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: myArray,

                datasets: [{
                    label: 'STOCK HISTORY',
                    data: myArray2

                }],


            },
            options: {
                elements: {
                    line: {
                        tension: 0, // disables bezier curves
                    }
                }
            },
            fill:false
        });
    </script>
</div>
