@model stocks.Models.Display.Data



<header style="font-family:Sabon LT Std;text-align:center;font-size:30px;font-weight:bold;
    background-color:#c6a073;color: #FFFFFF;padding:15px">Stock Visualization Application</header>



<div style="background-color: #7399C6;padding:10px; color: #FFFFFF;font-family:Sabon LT Std">


@using (Html.BeginForm("Ticker", "Display", null))

{
    

   
    @Html.ValidationSummary(true)
    <fieldset>
       
        <span>Ticker</span>
        <div class="editor-field">
            @Html.EditorFor(model => model.Ticker)
            @Html.ValidationMessageFor(model => model.Ticker)
        </div>
        <br />

        <span>Start</span>
        <div class="editor-field">
            @Html.EditorFor(model => model.Start)
            @Html.ValidationMessageFor(model => model.Start)
        </div>
        <br />

        <span>End</span>
        <div class="editor-field">
            @Html.EditorFor(model => model.End)
            @Html.ValidationMessageFor(model => model.End)
        </div>
        <br />


    </fieldset>
    <br />
    <p>
        <input type="submit" value="SUBMIT" style="background-color:#c6a073;color: #FFFFFF;border-color:black" />
    </p>
}

  <br /><br />

<p>//TODO: Hook up the data to the chart</p>


<br /><br />

<br /><br />

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.js"></script>

<canvas id="myChart" width="400" height="400"></canvas>
<script>

   


var ctx = document.getElementById("myChart").getContext('2d');
var myChart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: ["Red", "Blue", "Yellow", "Green11", "Purple", "Orange"],
        datasets: [{
            label: '# of Votes',
            data: [12, 19, 3, 5, 2, 3],
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255,99,132,1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]
        }
    }
});
</script>


</div>